name: 'Docker build pack'
description: 'Pack for Docker builds'

inputs:
  cached:
    description: 'Inform the main repository language'
    required: false
    default: 'true'
  context:
    description: "Context directory"
    required: false
    default: "."
  install:
    description: 'Install docker buildx'
    required: false
    default: 'false'
  multiPlatform:
    description: "Multi plataform container builds"
    required: false
    default: "true"
  push:
    description: "Push images"
    required: false
    default: "true"
  platforms:
    description: "Multi plataform container builds"
    required: false
    default: "linux/386,linux/amd64,linux/arm/v7,linux/arm/v8,linux/arm64,linux/ppc64le,linux/s390x"
  containerRegistry:
    description: "Image containers registry"
    required: false
    default: "true"

runs:
  using: "composite"

  steps:
    - name: Setup | Dependencies
      uses: filipeforattini/ff-iac-github-actions/.github/actions/setup-binaries@main
      id: dependencies
      if: inputs.install == 'true'
      with:
        docker-qmeu: true
        docker-buildx: true

    - name: Pipeline config scrapper
      id: analysis
      uses: andrebrito16/iac-github-actions/.github/actions/config-scrapper@main
      with:
        containerRegistry: ${{inputs.containerRegistry}}

    - name: Cacheless build and push
      uses: docker/build-push-action@v3
      if: inputs.cached == 'false' && inputs.multiPlatform == 'false'
      with:
        context: ${{inputs.context}}
        push: ${{inputs.push}}
        tags: ${{steps.analysis.outputs.build_tags}}
        labels: ${{steps.analysis.outputs.build_labels}}
        build-args: ${{steps.analysis.outputs.build_args}}

    - name: Cacheless multi-platform build and push
      uses: docker/build-push-action@v3
      if: inputs.cached == 'false' && inputs.multiPlatform == 'true'
      with:
        context: ${{inputs.context}}
        push: ${{inputs.push}}
        platforms: ${{inputs.platforms}}
        tags: ${{steps.analysis.outputs.build_tags}}
        labels: ${{steps.analysis.outputs.build_labels}}
        build-args: ${{steps.analysis.outputs.build_args}}

    - name: Cached build and push
      uses: docker/build-push-action@v3
      if: inputs.cached == 'true' && inputs.multiPlatform == 'false'
      with:
        context: ${{inputs.context}}
        push: ${{inputs.push}}
        tags: ${{steps.analysis.outputs.build_tags}}
        labels: ${{steps.analysis.outputs.build_labels}}
        build-args: ${{steps.analysis.outputs.build_args}}
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Cached multi-platform build and push
      uses: docker/build-push-action@v3
      if: inputs.cached == 'true' && inputs.multiPlatform == 'true'
      with:
        context: ${{inputs.context}}
        push: ${{inputs.push}}
        platforms: ${{inputs.platforms}}
        tags: ${{steps.analysis.outputs.build_tags}}
        labels: ${{steps.analysis.outputs.build_labels}}
        build-args: ${{steps.analysis.outputs.build_args}}
        cache-from: type=gha
        cache-to: type=gha,mode=max
